# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: CI and Code Coverage

on: [push]

jobs:
    build:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [18.x]
                # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

        steps:
            - uses: actions/checkout@v3
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'npm'
                  cache-dependency-path: '**/package-lock.json'

            - name: Install dependencies
              run: npm install

            - name: Reset database
              run: npm run prisma:reset:force
              env:
                  DATABASE_URL: ${{ secrets.DATABASE_URL }}

            - name: Seed database
              run: npm run prisma:seed
              env:
                  DATABASE_URL: ${{ secrets.DATABASE_URL }}

            - name: Run unit tests
              run: npm run test
              env:
                  DATABASE_URL: ${{ secrets.DATABASE_URL }}

            - name: Deploy to server
              uses: appleboy/ssh-action@v0.1.10
              with:
                  host: ${{ secrets.REMOTE_HOST }}
                  port: ${{ secrets.REMOTE_PORT }}
                  username: ${{ secrets.REMOTE_USER }}
                  password: ${{ secrets.SSH_PASSWORD }}
                  script_stop: true
                  script: |
                      pkill -f node
                      cd /home/nodejs/express-prisma-ts-boilerplate
                      git checkout dev
                      git pull
                      npm install
                      npm run start:prod

            - name: Upload coverage to Codecov
              uses: codecov/codecov-action@v3
              with:
                  token: ${{ secrets.CODECOV_TOKEN }}
