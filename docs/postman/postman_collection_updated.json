{
    "info": {
        "_postman_id": "616fe312-2cd8-4cae-acdc-f3444f0e43cc",
        "name": "Digiup API Collection",
        "description": "Complete API collection for Digiup API project with all available endpoints",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
        "_exporter_id": "6300836"
    },
    "item": [
        {
            "name": "📋 API Info & Health",
            "item": [
                {
                    "name": "Root Endpoint",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/",
                            "host": ["{{base_url}}"],
                            "path": [""]
                        },
                        "description": "API root endpoint"
                    },
                    "response": []
                },
                {
                    "name": "API Info",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/info",
                            "host": ["{{base_url}}"],
                            "path": ["info"]
                        },
                        "description": "Get API information and status"
                    },
                    "response": []
                },
                {
                    "name": "API Logs",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/logs",
                            "host": ["{{base_url}}"],
                            "path": ["logs"]
                        },
                        "description": "Get API logs (development only)"
                    },
                    "response": []
                },
                {
                    "name": "API Documentation",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/docs",
                            "host": ["{{base_url}}"],
                            "path": ["docs"]
                        },
                        "description": "Swagger API documentation (development only)"
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "👤 Client - Manual Authentication",
            "item": [
                {
                    "name": "Register User (Manual)",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 201) {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.environment.set('user_email', pm.request.body.raw ? JSON.parse(pm.request.body.raw).email : 'johndoe@sample.com');",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"email\": \"johndoe@sample.com\",\n    \"name\": \"John Doe\",\n    \"phone\": \"081234567890\",\n    \"password\": \"Johndoe@1234\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{base_url}}/{{version}}/client/auth/register",
                            "host": ["{{base_url}}"],
                            "path": ["{{version}}", "client", "auth", "register"]
                        },
                        "description": "Register a new user account using manual method (email/password)"
                    },
                    "response": []
                },
                {
                    "name": "Register Confirmation (Manual)",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/{{version}}/client/auth/register/confirmation?email={{user_email}}&token=sample_token_here",
                            "host": ["{{base_url}}"],
                            "path": ["{{version}}", "client", "auth", "register", "confirmation"],
                            "query": [
                                {
                                    "key": "email",
                                    "value": "{{user_email}}",
                                    "description": "User email"
                                },
                                {
                                    "key": "token",
                                    "value": "sample_token_here",
                                    "description": "Confirmation token from email"
                                }
                            ]
                        },
                        "description": "Confirm user registration with email token (manual method)"
                    },
                    "response": []
                },
                {
                    "name": "Login (Manual)",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 200) {",
                                    "    var jsonData = pm.response.json();",
                                    "    if (jsonData.content && jsonData.content.token) {",
                                    "        pm.environment.set('auth_token', jsonData.content.token);",
                                    "        console.log('Token saved:', jsonData.content.token);",
                                    "    }",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"email\": \"johndoe@sample.com\",\n    \"password\": \"Johndoe@1234\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{base_url}}/{{version}}/client/auth/login",
                            "host": ["{{base_url}}"],
                            "path": ["{{version}}", "client", "auth", "login"]
                        },
                        "description": "Login user using manual method (email/password) and get JWT token"
                    },
                    "response": []
                },
                {
                    "name": "Logout (Both Manual & Google)",
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{auth_token}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/{{version}}/client/auth/logout",
                            "host": ["{{base_url}}"],
                            "path": ["{{version}}", "client", "auth", "logout"]
                        },
                        "description": "Logout user (works for both manual and Google authentication)"
                    },
                    "response": []
                },
                {
                    "name": "Forgot Password Request",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"email\": \"johndoe@sample.com\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{base_url}}/{{version}}/client/auth/forgotpassword/request",
                            "host": ["{{base_url}}"],
                            "path": ["{{version}}", "client", "auth", "forgotpassword", "request"]
                        },
                        "description": "Request password reset token (manual auth only)"
                    },
                    "response": []
                },
                {
                    "name": "Forgot Password Reset",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"email\": \"johndoe@sample.com\",\n    \"token\": \"password_reset_token_here\",\n    \"password\": \"NewPassword@1234\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{base_url}}/{{version}}/client/auth/forgotpassword/reset",
                            "host": ["{{base_url}}"],
                            "path": ["{{version}}", "client", "auth", "forgotpassword", "reset"]
                        },
                        "description": "Reset password with token (manual auth only)"
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "🔐 Client - Google OAuth Authentication",
            "item": [
                {
                    "name": "Get Google OAuth URL",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 200) {",
                                    "    var jsonData = pm.response.json();",
                                    "    if (jsonData.content && jsonData.content.authUrl) {",
                                    "        pm.environment.set('google_auth_url', jsonData.content.authUrl);",
                                    "        console.log('Google Auth URL:', jsonData.content.authUrl);",
                                    "    }",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/{{version}}/client/auth/google",
                            "host": ["{{base_url}}"],
                            "path": ["{{version}}", "client", "auth", "google"]
                        },
                        "description": "Get Google OAuth authorization URL"
                    },
                    "response": []
                },
                {
                    "name": "Google OAuth Callback",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/{{version}}/client/auth/google/callback?code=google_auth_code_here&state=optional_state",
                            "host": ["{{base_url}}"],
                            "path": ["{{version}}", "client", "auth", "google", "callback"],
                            "query": [
                                {
                                    "key": "code",
                                    "value": "google_auth_code_here",
                                    "description": "Authorization code from Google"
                                },
                                {
                                    "key": "state",
                                    "value": "optional_state",
                                    "description": "Optional state parameter"
                                }
                            ]
                        },
                        "description": "Handle Google OAuth callback (usually called by Google automatically)"
                    },
                    "response": []
                },
                {
                    "name": "Login with Google Token",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 200) {",
                                    "    var jsonData = pm.response.json();",
                                    "    if (jsonData.content && jsonData.content.token) {",
                                    "        pm.environment.set('auth_token', jsonData.content.token);",
                                    "        console.log('Google Auth Token saved:', jsonData.content.token);",
                                    "    }",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"code\": \"google_auth_code_here\",\n    \"state\": \"optional_state\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{base_url}}/{{version}}/client/auth/google/token",
                            "host": ["{{base_url}}"],
                            "path": ["{{version}}", "client", "auth", "google", "token"]
                        },
                        "description": "Step 3: Exchange Google authorization code for JWT token. Get the 'code' from Step 2 (Google OAuth callback URL) and use it here. Do NOT use GOOGLE_CLIENT_SECRET - that's server-side only!"
                    },
                    "response": []
                },
                {
                    "name": "Register with Google Token",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 200 || pm.response.code === 201) {",
                                    "    var jsonData = pm.response.json();",
                                    "    if (jsonData.content && jsonData.content.token) {",
                                    "        pm.environment.set('auth_token', jsonData.content.token);",
                                    "        console.log('Google Register Token saved:', jsonData.content.token);",
                                    "    }",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"code\": \"google_auth_code_here\",\n    \"state\": \"optional_state\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{base_url}}/{{version}}/client/auth/google/register",
                            "host": ["{{base_url}}"],
                            "path": ["{{version}}", "client", "auth", "google", "register"]
                        },
                        "description": "Register new user using Google OAuth token"
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "� Client - Common Authentication",
            "item": [
                {
                    "name": "Logout",
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{auth_token}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/{{version}}/client/auth/logout",
                            "host": ["{{base_url}}"],
                            "path": ["{{version}}", "client", "auth", "logout"]
                        },
                        "description": "Logout user (works for both manual and Google auth)"
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "�🔐 Client - Password Recovery",
            "item": [
                {
                    "name": "Forgot Password Request",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"email\": \"johndoe@sample.com\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{base_url}}/{{version}}/client/auth/forgotpassword/request",
                            "host": ["{{base_url}}"],
                            "path": ["{{version}}", "client", "auth", "forgotpassword", "request"]
                        },
                        "description": "Request password reset token"
                    },
                    "response": []
                },
                {
                    "name": "Forgot Password Reset",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"email\": \"johndoe@sample.com\",\n    \"token\": \"password_reset_token_here\",\n    \"password\": \"NewPassword@1234\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{base_url}}/{{version}}/client/auth/manual/forgotpassword/reset",
                            "host": ["{{base_url}}"],
                            "path": ["{{version}}", "client", "auth", "manual", "forgotpassword", "reset"]
                        },
                        "description": "Reset password with token (manual auth only)"
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "👥 Client - User Profile",
            "item": [
                {
                    "name": "Get My Profile",
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{auth_token}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/{{version}}/client/user/me",
                            "host": ["{{base_url}}"],
                            "path": ["{{version}}", "client", "user", "me"]
                        },
                        "description": "Get current user profile information"
                    },
                    "response": []
                },
                {
                    "name": "Update My Profile",
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{auth_token}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "PATCH",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"name\": \"John Doe Updated\",\n    \"phone\": \"081234567891\",\n    \"avatar\": \"https://example.com/avatar.jpg\",\n    \"accountName\": \"John's Account\",\n    \"accountLocationState\": \"Jakarta\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{base_url}}/{{version}}/client/user/me",
                            "host": ["{{base_url}}"],
                            "path": ["{{version}}", "client", "user", "me"]
                        },
                        "description": "Update current user profile information"
                    },
                    "response": []
                },
                {
                    "name": "Delete My Account",
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{auth_token}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/{{version}}/client/user/me",
                            "host": ["{{base_url}}"],
                            "path": ["{{version}}", "client", "user", "me"]
                        },
                        "description": "Delete current user account"
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "🔧 Admin - User Management",
            "item": [
                {
                    "name": "Get All Users",
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{admin_token}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/admin/users",
                            "host": ["{{base_url}}"],
                            "path": ["admin", "users"]
                        },
                        "description": "Get list of all users (admin access required)"
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "📧 Development - Templates",
            "description": "Email and SMS templates (development only)",
            "item": [
                {
                    "name": "Email Templates",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/templates/email",
                            "host": ["{{base_url}}"],
                            "path": ["templates", "email"]
                        },
                        "description": "View email templates (development only)"
                    },
                    "response": []
                },
                {
                    "name": "SMS Templates",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/templates/sms",
                            "host": ["{{base_url}}"],
                            "path": ["templates", "sms"]
                        },
                        "description": "View SMS templates (development only)"
                    },
                    "response": []
                }
            ]
        }
    ],
    "event": [
        {
            "listen": "prerequest",
            "script": {
                "type": "text/javascript",
                "exec": [
                    "// Auto-set Content-Type for POST/PATCH requests",
                    "if (pm.request.method === 'POST' || pm.request.method === 'PATCH') {",
                    "    if (!pm.request.headers.has('Content-Type')) {",
                    "        pm.request.headers.add({",
                    "            key: 'Content-Type',",
                    "            value: 'application/json'",
                    "        });",
                    "    }",
                    "}"
                ]
            }
        },
        {
            "listen": "test",
            "script": {
                "type": "text/javascript",
                "exec": [
                    "// Global test to check response time",
                    "pm.test('Response time is less than 5000ms', function () {",
                    "    pm.expect(pm.response.responseTime).to.be.below(5000);",
                    "});",
                    "",
                    "// Global test to check for valid JSON response",
                    "pm.test('Response has valid JSON body', function () {",
                    "    try {",
                    "        pm.response.json();",
                    "        pm.test.done();",
                    "    } catch (e) {",
                    "        pm.test.skip();",
                    "    }",
                    "});"
                ]
            }
        }
    ],
    "variable": [
        {
            "key": "api_version",
            "value": "v1",
            "type": "string"
        }
    ]
}
